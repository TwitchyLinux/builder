[graphical_environment.post.install.non-latin-fonts]
if.not = ["features.essential"]
order_priority = 95
packages = ["fonts-indic", "fonts-noto", "fonts-noto-cjk"]

[graphical_environment.post.install.nmap-tools]
if.not = ["features.essential"]
if.all = ["features.graphical"]
order_priority = 90
packages = ["nmap", "ncat", "ndiff", "zenmap"]

[graphical_environment.post.install.gui-dev-tools]
if.not = ["features.essential"]
if.all = ["features.graphical", "features.SWE"]
order_priority = 85
packages = ["gpick", "glade", "mesa-utils", "libgtk-3-dev", "libcairo2-dev", "libglib2.0-dev", "libwxgtk3.0-dev"]

[graphical_environment.post.install.cad-and-images]
if.not = ["features.essential"]
if.all = ["features.graphical", "features.maker"]
order_priority = 80
packages = ["openscad", "inkscape"]

[graphical_environment.post.install.qemu-gui]
if.not = ["features.essential"]
if.all = ["features.graphical"]
order_priority = 80
packages = ["qemu-system-gui"]

[graphical_environment.post.install.wireshark]
if.not = ["features.essential"]
if.all = ["features.graphical"]
order_priority = 75
packages = ["wireshark"]

[graphical_environment.post.install.chrome]
if.not = ["features.essential"]
if.all = ["features.graphical"]
order_priority = 50
do = [
  {action = 'download', url = 'https://dl.google.com/linux/linux_signing_key.pub', to = '/chrome-signing-key.pub'},
  {action = 'run', bin = 'apt-key', args = ['add', '/chrome-signing-key.pub']},
  {action = 'mkdir', dir = '/etc/apt/sources.list.d'},
  {action = 'append', to = '/etc/apt/sources.list.d/google-chrome.list', data = "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main\n"},
  {action = 'run', bin = 'rm', args = ['/chrome-signing-key.pub']},
  {action = 'run', bin = 'apt-get', args = ['update']},
  {action = 'run', bin = 'apt-get', args = ['-y', 'install', 'google-chrome-stable']},
]

[graphical_environment.post.install.rawtherapee]
if.not = ["features.essential"]
if.all = ["features.graphical"]
order_priority = 40
packages = ["rawtherapee"]

[graphical_environment.post.install.kite]
if.not = ["features.essential"]
if.all = ["features.graphical", "features.maker"]
order_priority = 40
do = [
  {action = 'download', url = 'https://github.com/twitchyliquid64/kcgen/releases/download/v0.3.0/kite_0.3.0_amd64.deb', to = '/kite_0.3.0_amd64.deb'},
  {action = 'sha256sum', from = '/kite_0.3.0_amd64.deb', expected = '8e533d7399d02c1df80bf02b211d3aeb05f2656f6fb9b3a0cb36e12a05c73201'},
  {action = 'run', bin = 'dpkg', args = ['-i', '/kite_0.3.0_amd64.deb']},
  {action = 'run', bin = 'rm', args = ['/kite_0.3.0_amd64.deb']},
]

[graphical_environment.post.install.kcgen]
if.not = ["features.essential"]
if.all = ["features.maker"]
order_priority = 40
do = [
  {action = 'download', url = 'https://github.com/twitchyliquid64/kcgen/releases/download/v0.3.0/kcgen_0.3.0_amd64.deb', to = '/kcgen_0.3.0_amd64.deb'},
  {action = 'sha256sum', from = '/kcgen_0.3.0_amd64.deb', expected = 'd86c96b3e6c9373a817283804796099eeb8bccacb1c987a7d4f4c101d44fad95'},
  {action = 'run', bin = 'dpkg', args = ['-i', '/kcgen_0.3.0_amd64.deb']},
  {action = 'run', bin = 'rm', args = ['/kcgen_0.3.0_amd64.deb']},
]

[graphical_environment.post.install.atom]
if.not = ["features.essential"]
if.all = ["features.graphical", "features.SWE"]
order_priority = 45
do = [
  {action = 'download', url = 'https://packagecloud.io/AtomEditor/atom/gpgkey', to = '/atom-signing-key.pub'},
  {action = 'run', bin = 'apt-key', args = ['add', '/atom-signing-key.pub']},
  {action = 'append', to = '/etc/apt/sources.list', data = "deb [arch=amd64] https://packagecloud.io/AtomEditor/atom/any/ any main\n"},
  {action = 'run', bin = 'rm', args = ['/atom-signing-key.pub']},
  {action = 'run', bin = 'apt-get', args = ['update']},
  {action = 'run', bin = 'apt-get', args = ['-y', 'install', 'atom']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install file-icons']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install language-systemd']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install go-plus']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install atom-beautify']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install language-ccr']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install language-hcl']},
  {action = 'run', bin = 'runuser', args = ['-l', '{{base.main_user.name}}', '-c', '/usr/bin/apm install language-proto']},
]
