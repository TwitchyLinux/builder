[graphical_environment.gnome]
packages = [
  # Basic components
  "gdm3", "gnome-menus", "gnome-session", "gnome-shell", "at-spi2-core", "baobab", "caribou", "dconf-cli",
  # Basic styling
  "desktop-base", "adwaita-icon-theme", "gnome-backgrounds", "fonts-cantarell", "gnome-themes-extra",
  # Useful programs
  "cheese", "gnome-system-monitor", "gnome-terminal", "nautilus", "totem", "zenity", "network-manager-gnome",
  "eog", "evince", "gedit", "gnome-calculator", "gnome-characters", "gnome-control-center", "gnome-disk-utility",
  "gnome-font-viewer", "file-roller", "gnome-calendar", "gnome-clocks", "gnome-screenshot", "orca", "gnome-logs",
  "transmission-gtk", "gnome-sushi",
  # Seems important
  "gnome-shell-extensions", "gsettings-desktop-schemas", "gstreamer1.0-packagekit", "gstreamer1.0-plugins-base",
  "gstreamer1.0-plugins-good", "gstreamer1.0-pulseaudio", "gvfs-backends", "gvfs-fuse", "libatk-adaptor", "libcanberra-pulse", "libglib2.0-bin",
  "libpam-gnome-keyring", "libproxy1-plugin-gsettings", "libproxy1-plugin-webkit", "pulseaudio", "pulseaudio-module-bluetooth",
  "sound-theme-freedesktop", "system-config-printer-common", "system-config-printer-udev", "libproxy1-plugin-networkmanager",
  "glib-networking", "gnome-bluetooth", "gnome-settings-daemon", "gnome-keyring", "gstreamer1.0-libav",
  "dconf-gsettings-backend", "gnome-color-manager", "libgsf-bin", "gkbd-capplet", "tracker"
]
steps.install-background.do = [
  {action = 'mkdir', dir = '/usr/share/backgrounds'},
  {action = 'install-resource', from = '../twitchy_background.png', to = '/usr/share/backgrounds/twitchy_background.png'},
]

[graphical_environment.sway]
packages = [
  # Build tools
  "ninja-build", "python3", "git", "autoconf", "libtool",
  # Libraries
  "build-essential", "cmake", "libwayland-dev", "wayland-protocols",
  "libegl1-mesa-dev", "libgles2-mesa-dev", "libdrm-dev", "libgbm-dev", "libinput-dev",
  "libxkbcommon-dev", "libudev-dev", "libpixman-1-dev", "libsystemd-dev", "libcap-dev",
  "libxcb1-dev", "libxcb-composite0-dev", "libxcb-xfixes0-dev", "libxcb-xinput-dev",
  "libxcb-image0-dev", "libxcb-render-util0-dev", "libx11-xcb-dev", "libxcb-icccm4-dev",
  "freerdp2-dev", "libwinpr2-dev", "libpng-dev", "libavutil-dev", "libavcodec-dev",
  "libavformat-dev", "universal-ctags",
  "libelogind-dev", "libxcb-util0-dev",
  # Additional components
  "dbus", "dbus-x11", "dbus-user-session",
]
steps.build-sway.do = [
  {action = 'download', url = 'http://ftp.debian.org/debian/pool/main/m/meson/meson_0.56.0-1.1_all.deb', to = '/meson_0.56.0-1.1_all.deb'},
  {action = 'run', bin = 'apt-get', args=['install', '-y', '/meson_0.56.0-1.1_all.deb']},
  {action = 'run', bin = 'rm', args=['/meson_0.56.0-1.1_all.deb']},
  {action = 'mkdir', dir = '/sway-src'},

  # Wlroots
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/swaywm/wlroots.git', '/sway-src/wlroots']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/wlroots', 'checkout', '0.10.0']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/wlroots && meson build']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/wlroots && ninja -C build install']},

  # json-c
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/json-c/json-c.git', '/sway-src/json-c']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/json-c', 'checkout', 'json-c-0.13.1-20180305']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && sh autogen.sh']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && ./configure --enable-threading --prefix=/usr/local']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && make "-j$(nproc)"']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && make install']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && ldconfig']},

  # Sway
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/swaywm/sway.git', '/sway-src/sway']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/sway', 'checkout', '1.4']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/sway && meson build']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/sway && ninja -C build install']},

  # Swaybg
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/swaywm/swaybg.git', '/sway-src/swaybg']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/swaybg', 'checkout', '1.0']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/swaybg && meson build']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/swaybg && ninja -C build install']},

  # Update perms
  {action = 'run', bin = 'chmod', args = ['u+s', '/usr/local/bin/sway']},
]
steps.install-background.do = [
  {action = 'mkdir', dir = '/usr/share/backgrounds'},
  {action = 'install-resource', from = '../twitchy_background.png', to = '/usr/share/backgrounds/twitchy_background.png'},
]
