[graphical_environment.sway]
packages = [
  # Build tools
  "ninja-build", "python3", "git", "autoconf", "libtool",
  # Libraries
  "build-essential", "cmake", "libwayland-dev", "wayland-protocols",
  "libegl1-mesa-dev", "libgles2-mesa-dev", "libdrm-dev", "libgbm-dev", "libinput-dev",
  "libxkbcommon-dev", "libudev-dev", "libpixman-1-dev", "libsystemd-dev", "libcap-dev",
  "libxcb1-dev", "libxcb-composite0-dev", "libxcb-xfixes0-dev", "libxcb-xinput-dev",
  "libxcb-image0-dev", "libxcb-render-util0-dev", "libx11-xcb-dev", "libxcb-icccm4-dev",
  "freerdp2-dev", "libwinpr2-dev", "libpng-dev", "libavutil-dev", "libavcodec-dev",
  "libavformat-dev", "universal-ctags",
  "libelogind-dev", "libxcb-util0-dev",
  "libgdk-pixbuf2.0-dev",
  # Additional components
  "dbus", "dbus-x11", "dbus-user-session",
]
steps.build-sway.do = [
  # Meson
  {action = 'download', url = 'http://ftp.debian.org/debian/pool/main/m/meson/meson_0.56.0-1.1_all.deb', to = '/meson_0.56.0-1.1_all.deb'},
  {action = 'sha256sum', from = '/meson_0.56.0-1.1_all.deb', expected = '30f8fba68cf3e4ccf7bd6bccde6d9b42b11500507f4b9906e668b8ef8ccc8013'},
  {action = 'run', bin = 'apt-get', args=['install', '-y', '/meson_0.56.0-1.1_all.deb']},
  {action = 'run', bin = 'rm', args=['/meson_0.56.0-1.1_all.deb']},
  {action = 'mkdir', dir = '/sway-src'},

  # Scdoc
  {action = 'download', url = 'https://git.sr.ht/~sircmpwn/scdoc/archive/1.11.1.tar.gz', to = '/sway-src/1.11.1.tar.gz'},
  {action = 'sha256sum', from = '/sway-src/1.11.1.tar.gz', expected = 'e529fcb00508e7e4c5025a745591b805b754b3bd5c84c5192acaefabdfa8f700'},
  {action = 'run', bin = 'tar', args=['-C', '/sway-src', '-xvf', '/sway-src/1.11.1.tar.gz']},
  {action = 'run', bin = 'make', args = ['-C', '/sway-src/scdoc-1.11.1', 'PREFIX=/usr/local']},
  {action = 'run', bin = 'make', args = ['-C', '/sway-src/scdoc-1.11.1', 'PREFIX=/usr/local', 'install']},
  {action = 'run', bin = 'rm', args=['/sway-src/1.11.1.tar.gz']},
  {action = 'run', bin = 'rm', args=['-rf', '/sway-src/scdoc-1.11.1']},

  # Wlroots
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/swaywm/wlroots.git', '/sway-src/wlroots']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/wlroots', 'checkout', '0.10.0']}, # 'checkout', '0.12.0'
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/wlroots && meson build']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/wlroots && ninja -C build install']},

  # json-c
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/json-c/json-c.git', '/sway-src/json-c']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/json-c', 'checkout', 'json-c-0.13.1-20180305']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && sh autogen.sh']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && ./configure --enable-threading --prefix=/usr/local']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && make "-j$(nproc)"']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && make install']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/json-c && ldconfig']},

  # Sway
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/swaywm/sway.git', '/sway-src/sway']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/sway', 'checkout', '1.4']}, # 'checkout', '1.5.1'
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/sway && meson build -Dman-pages=enabled -Dxwayland=enabled -Dgdk-pixbuf=enabled -Dsd-bus-provider=libsystemd']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/sway && ninja -C build install']},

  # Swaybg
  {action = 'run', bin = 'git', args = ['clone', 'https://github.com/swaywm/swaybg.git', '/sway-src/swaybg']},
  {action = 'run', bin = 'git', args = ['-C', '/sway-src/swaybg', 'checkout', '1.0']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/swaybg && meson build -Dman-pages=enabled -Dgdk-pixbuf=enabled']},
  {action = 'run', bin = 'bash', args = ['-c', 'cd /sway-src/swaybg && ninja -C build install']},

  # Update perms
  {action = 'run', bin = 'chmod', args = ['u+s', '/usr/local/bin/sway']},

  # Cleanup
  {action = 'run', bin = 'rm', args = ['-rf', '/sway-src']},
]
steps.install-background.do = [
  {action = 'mkdir', dir = '/usr/share/backgrounds'},
  {action = 'install-resource', from = '../twitchy_background.png', to = '/usr/share/backgrounds/twitchy_background.png'},
]
steps.install-sway-config.do = [
  {action = 'mkdir', dir = '/etc/sway'},
  {action = 'install-resource', from = '../sway/sway.config', to = '/etc/sway/config'},
]
steps.install-sway-config-twl.do = [
  {action = 'mkdir', dir = '/home/twl/.config/sway'},
  {action = 'install-resource', from = '../sway/sway.config', to = '/home/twl/.config/sway/config'},
  {action = 'run', bin = 'chown', args = ['-R', '{{base.main_user.name}}', '/home/twl/.config']},
  {action = 'run', bin = 'chgrp', args = ['-R', '{{base.main_user.name}}', '/home/twl/.config']},
]
steps.install-sway-floating.do = [
  {action = 'install-resource', from = '../sway/run-floating', to = '/usr/bin/sway-float'},
  {action = 'run', bin = 'chmod', args = ['+x', '/usr/bin/sway-float']},
]
steps.install-swaynagmode.do = [
  {action = 'mkdir', dir = '/swaynagmode-src'},
  {action = 'download', url = 'https://github.com/b0o/swaynagmode/archive/v0.2.1.tar.gz', to = '/swaynagmode-src/v0.2.1.tar.gz'},
  {action = 'sha256sum', from = '/swaynagmode-src/v0.2.1.tar.gz', expected = 'f513395a27ac63192a9f188b6f4f5b36c2c5fa8fa8d71b936e6f069ec5a63f24'},
  {action = 'run', bin = 'tar', args = ['-C', '/swaynagmode-src', '-xvf', '/swaynagmode-src/v0.2.1.tar.gz']},
  {action = 'run', bin = 'cp', args = ['/swaynagmode-src/swaynagmode-0.2.1/swaynagmode', '/usr/bin/swaynagmode']},
  {action = 'run', bin = 'chmod', args = ['+x', '/usr/bin/swaynagmode']},
  {action = 'run', bin = 'rm', args = ['-rf', '/swaynagmode-src']},
]
